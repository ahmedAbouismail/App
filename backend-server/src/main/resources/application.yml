server:
  port: 7006
  forward-headers-strategy: framework
  tomcat:
    use-relative-redirects: true
    remoteip:
      protocol-header: x-forwarded-proto
      remote-ip-header: x-forwarded-for




app:
  eureka-username: u
  eureka-password: p
  eureka-server: localhost
  auth-server: localhost



#eureka:
#  client:
#    serviceUrl:
#      defaultZone: "http://${app.eureka-username}:${app.eureka-password}@${app.eureka-server}:8761/eureka/"
#    initialInstanceInfoReplicationIntervalSeconds: 5
#    registryFetchIntervalSeconds: 5
#  instance:
#    leaseRenewalIntervalInSeconds: 5
#    leaseExpirationDurationInSeconds: 5
#
#management.endpoint.health.show-details: "ALWAYS"
#management.endpoints.web.exposure.include: "*"

#spring:
#  security:
#    oauth2:
#      client:
#        registration:
#          writer-client-oidc:
#            provider: spring
#            client-id: writer
#            client-secret: secret
#            authorization-grant-type: authorization_code
#            redirect-uri: "http://127.0.0.1:8000/login/oauth2/code/{registrationId}"
#            scope: openid
#            client-name: writer-client-oidc
#          writer-client-authorization-code:
#            provider: spring
#            client-id: writer
#            client-secret: secret
#            authorization-grant-type: authorization_code
#            redirect-uri: "http://127.0.0.1:8000/login/oauth2/code/{registrationId}"
#            scope: chart:write, chart:read
#            client-name: writer-client-authorization-code
#        provider:
#          spring:
#            issuer-uri: http://${app.auth-server}:9999
#            authorization-uri: https://localhost:8443/oauth2/authorize
#            token-uri: https://localhost:8443/oauth2/token

#redirect-uri: "https://localhost:8443/login/oauth2/code/writer-client-oidc"
#redirect-uri: "https://localhost:8443/authorized"
#redirect-uri: "http://127.0.0.1:8000/authorized"
logging:
  level:
    root: INFO
    htw.berlin: DEBUG
    org.springframework.web: INFO
    org.springframework.security: DEBUG
    org.springframework.security.oauth2: DEBUG
---
spring.config.activate.on-profile: docker

app:
  eureka-server: eureka
  auth-server: auth-server
server:
  port: 8000
  forward-headers-strategy: framework
  tomcat:
    use-relative-redirects: true
    remoteip:
      protocol-header: x-forwarded-proto
      remote-ip-header: x-forwarded-for